@page "/"

@using AlarmClockApp.Components;

@using AlarmClockApp.Data;


@*---------- nav bar tabs ----------*@

<div class="d-flex justify-content-center align-items-end w-100 border border-danger">
    <div data-augmented-reset>
        <div data-augmented-ui="tl-clip tr-clip-x br-clip both" class="styleme navBarClock"></div>
    </div>
    <div data-augmented-reset class="d-flex align-items-end">
        <div data-augmented-ui="tl-clip br-clip both" class="navBarTabA"></div>
        <div data-augmented-ui="tl-clip br-clip both" class="navBarTabB"></div>
        <div data-augmented-ui="tl-clip br-clip both" class="navBarTabA"></div>
        <div data-augmented-ui="tl-clip br-clip both" class="navBarTabB"></div>
        <div data-augmented-ui="tl-clip br-clip both" class="navBarTabA"></div>
        <div data-augmented-ui="tl-clip br-clip both" class="navBarTabB"></div>
        <div data-augmented-ui="tl-clip tr-clip border" class="navBarTabCurrentTab bg-black0">
            <br />
            <br />
        </div>
    </div>
</div>

@*---------- alarm clock ----------*@
<div data-augmented-ui="tl-clip tr-clip-x  r-clip-y br-clip b-clip-x bl-2-clip-y l-clip-y border" class="testAugUI bg-black0">

    <div data-augment-ui-reset class="w-100 h-100">
        <div class="row AlarmClockGridRow">

            @*------ tl ------*@
            <div class="col col-5 tempRedBox">
                <div data-augmented-ui="tr-clip bl-clip-y both" class="AlarmClockDissmissAndWeatherDiv bg-gray">

                    <div data-augment-ui-reset>
                        <div data-augmented-ui="tr-clip bl-clip both" class="dismissButton bg-red">
                            <h1>Dismiss</h1>
                        </div>
                    </div>
                </div>
            </div>

            @*------ tr ------*@
            <div class="col col-5 tempRedBox trDiv">
                <div class="AlarmClockTrScreen">
                    <div class="TrScreenContent">
                        <h1>@alarm.alarmTime</h1>
                        <h3 class="cyberpunk w-100"></h3>
                        <div data-augmented-ui="bl-clip-x both" class="bg-orange p-3">
                            <p>Time Remaining: XX Hr, XX Min, XX sec</p>
                            <p>Time Remaining:</p>
                        </div>
                    </div>
                </div>

            </div>

            @*------ bl ------*@
            <div class="col col-5 tempRedBox blDiv">

                <div class="row row-cols-1 h-100">
                    <div class="d-flex justify-content-right h-60 w-100">

                        <div data-augmented-ui="tl-clip tr-clip br-clip bl-2-round-x both" class="AlarmClockBLtopDiv bg-gray">

                            <br />
                        </div>
                    </div>

                    <div data-augmented-ui="tl-clip tr-scoop-inset br-clip-x bl-clip both" class="AlarmClockBLbottomDiv bg-gray">
                        <br />
                    </div>
                </div>
            </div>

            @*------ br ------*@
            <div class="col col-5 tempRedBox h-50 d-flex flex-column align-items-end">
                <div data-augmented-ui="tl-2-clip-y tr-2-clip-y bl-2-clip-y both" class="tempClassName-bottomRightButtons">
                    <br />
                    <AlarmClockControlButtons OnAlarmTimeChanged="UpdateAlarmTime"></AlarmClockControlButtons>
                    <h4 class="cyberpunk"></h4>
                </div>

                <div data-augmented-ui="tl-2-clip-x tr-clip br-clip bl-2-clip-x border" class="fishTank">

                </div>
            </div>
        </div>



    </div>

</div>

<div data-augmented-ui="tl-clip-x tr-clip-x r-clip-xy bl-clip both" class="styleme p-5">

    <div class="body">

        <div class="border1 d-flex justify-content-between align-items-center">

            <div class="innderBorder1 d-flex justify-content-between align-items-center">
                <div class="d-flex">
                    <p class="p-r-3">@DateTime.Now.ToShortDateString()</p>

                    <p>current time: @currentTime</p>
                </div>

                <div class="d-flex flex-column justify-content-around align-items-center">
                    <h6>Alarm Time:</h6>
                    <h1>@alarm.alarmTime</h1>
                </div>

                <EditForm Model="@alarm">

                    <div class="d-flex flex-column justify-content-around align-items-center">
                        <p>Set Alarm:</p>
                        <input id="alarmTimeEF" @bind="alarm.alarmTime" type="time" />
                    </div>


                </EditForm>


            </div>


        </div>

    </div>

    <div>

    </div>

    <SevenSegDigetDisplay Digit="0" />
</div>

<div class="d-flex justify-content-center align-items-center w-100 border border-danger" style="height: 50px;">
    <div data-augmented-reset>
        <div data-augmented-ui="tl-clip br-clip both" class="styleme">
            <br />
            <br />
        </div>
    </div>
</div>
<div data-augmented-ui="tl-clip br-clip both" class="navBarTab">
    <br />
    <br />
</div>



@* <svg xmlns=""http://www.w3.org/2000/svg"" width=""140px"" height=""200px"" viewBox=""0 -2 10 22"">  *@
@*     <g class=""digit1""> *@
@*         <polygon id=""a"" class=""polyOff"" points="" 1, 1  2, 0  8, 0  9, 1  8, 2  2, 2""></polygon> *@
@*         <polygon id=""b"" class=""polyOn"" points="" 9, 1 10, 2 10, 8  9, 9  8, 8  8, 2""></polygon> *@
@*         <polygon id=""c"" class=""polyOn"" points="" 9, 9 10,10 10,16  9,17  8,16  8,10""></polygon> *@
@*         <polygon id=""d"" class=""polyOn"" points="" 9,17  8,18  2,18  1,17  2,16  8,16""></polygon> *@
@*         <polygon id=""e"" class=""polyOn"" points="" 1,17  0,16  0,10  1, 9  2,10  2,16""></polygon> *@
@*         <polygon id=""f"" class=""polyOn"" points="" 1, 9  0, 8  0, 2  1, 1  2, 2  2, 8""></polygon> *@
@*         <polygon id=""g"" class=""polyOn"" points="" 1, 9  2, 8  8, 8  9, 9  8,10  2,10""></polygon> *@
@*         <polygon id=""h"" class=""polyOn"" points="" 11,16  13,16  13,18  11,18""></polygon> *@
@*     </g> *@
@* </svg> *@

@code {
    private Alarm? alarm = new();

    private Timer timer; //used to "count" and refresh seconds on clock

    private string? currentTime;

    //need to get the alarmTime by converting input into a dateTime 

    private string? alarmTimeString = "";
    private string? alarmTime;
    private string? alarmTimeDisplay;
    private string timeRemaining = "Time Remaining: XX Hr, XX Min, XX sec";

    protected override void OnInitialized()
    {
        timer = new Timer(UpdateTime, null, 0, 1000);
    }





    private void UpdateTime(object state)
    {
        currentTime = DateTime.Now.ToString("HH:mm:ss");
        InvokeAsync(StateHasChanged);

        // Trigger alarm if the current time matches the set alarm time
        // if (alarmTime.HasValue && DateTime.Now.TimeOfDay.Hours == alarmTime.Value.Hours &&
        //     DateTime.Now.TimeOfDay.Minutes == alarmTime.Value.Minutes)
        // {
        //     alarmMessage = "Aaaaalarm! Time reached!";
        // }


        if (alarm.alarmTime.Hour == DateTime.Now.TimeOfDay.Hours)
        {

        }
    }

    public void SetAlarm()
    {
        if(!string.IsNullOrWhiteSpace(alarmTimeString))
        {
            alarm.alarmTimeString = alarmTimeString;
            alarm.currrentTime = DateTime.Now;
            alarmTimeString = String.Empty;
        }


    }

    int[] alarmTimeInput = new int[4];

    void UpdateAlarmTime(int[] newTime) {
        int hours = (newTime[0] * 10) + newTime[1];
        int mins = (newTime[2] * 10) + newTime[3];
        Console.WriteLine(hours + " " + mins);
        Console.WriteLine();
        alarm.alarmTime = new TimeOnly(hours, mins, 0);

        Console.WriteLine(alarm.alarmTime.ToString());
        alarm.alarmTimeString = alarm.alarmTime.ToString();

        UpdateTimeRemaining();

        StateHasChanged();
    }

    void UpdateTimeRemaining() {
        var timeRemaining = DateTime.Now.Date + alarm.alarmTime.ToTimeSpan();
        Console.WriteLine(timeRemaining.ToString());
    }

    

}



