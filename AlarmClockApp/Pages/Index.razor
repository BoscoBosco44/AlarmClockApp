@page "/"

@using AlarmClockApp.Components;

@using AlarmClockApp.Data;


<div class="body">

    @* <div class="border1 d-flex justify-content-between align-items-center"> *@

    @*     <div class="d-flex"> *@
    @*         <p class="p-r-3">current day: @DateTime.Now.ToShortDateString()</p> *@

    @*         <p>current time: @currentTime</p> *@
    @*     </div> *@


    @*     <h2>⏰Alarm Time: @alarm.alarmTimeString</h2> *@

    @*     <div> *@
    @*         <h3>Set time: </h3> *@
    @*         <input @bind="alarmTimeString" /> *@
    @*         <button class="btn btn-primary" @onclick="SetAlarm">Update</button> *@
    @*     </div> *@


    @* </div> *@


    <div class="border1 d-flex justify-content-between align-items-center">

        <div class="innderBorder1 d-flex justify-content-between align-items-center">
            <div class="d-flex">
                <p class="p-r-3">@DateTime.Now.ToShortDateString()</p>

                <p>current time: @currentTime</p>
            </div>

            <div class="d-flex flex-column justify-content-around align-items-center">
                <h2>⏰</h2>
                <h6>Alarm Time:</h6>
                <h1>@alarm.alarmTime</h1>
            </div>

            <EditForm Model="@alarm">

                <div class="d-flex flex-column justify-content-around align-items-center">
                    <p>Set Alarm:</p>
                    <input id="alarmTimeEF" @bind="alarm.alarmTime" type="time" />
                </div>


            </EditForm>
        </div>


    </div>

</div>

<div>
    
</div>


<SevenSegDigetDisplay Digit="0" />


@* <svg xmlns=""http://www.w3.org/2000/svg"" width=""140px"" height=""200px"" viewBox=""0 -2 10 22"">  *@
@*     <g class=""digit1""> *@
@*         <polygon id=""a"" class=""polyOff"" points="" 1, 1  2, 0  8, 0  9, 1  8, 2  2, 2""></polygon> *@
@*         <polygon id=""b"" class=""polyOn"" points="" 9, 1 10, 2 10, 8  9, 9  8, 8  8, 2""></polygon> *@
@*         <polygon id=""c"" class=""polyOn"" points="" 9, 9 10,10 10,16  9,17  8,16  8,10""></polygon> *@
@*         <polygon id=""d"" class=""polyOn"" points="" 9,17  8,18  2,18  1,17  2,16  8,16""></polygon> *@
@*         <polygon id=""e"" class=""polyOn"" points="" 1,17  0,16  0,10  1, 9  2,10  2,16""></polygon> *@
@*         <polygon id=""f"" class=""polyOn"" points="" 1, 9  0, 8  0, 2  1, 1  2, 2  2, 8""></polygon> *@
@*         <polygon id=""g"" class=""polyOn"" points="" 1, 9  2, 8  8, 8  9, 9  8,10  2,10""></polygon> *@
@*         <polygon id=""h"" class=""polyOn"" points="" 11,16  13,16  13,18  11,18""></polygon> *@
@*     </g> *@
@* </svg> *@

@code {
    private Alarm? alarm = new();

    private Timer timer; //used to "count" and refresh seconds on clock

    private string? currentTime;

    //need to get the alarmTime by converting input into a dateTime 

    private string? alarmTimeString = "";
    private string? alarmTime;
    private string? alarmTimeDisplay;

    protected override void OnInitialized()
    {
        timer = new Timer(UpdateTime, null, 0, 1000);
    }

    private void UpdateTime(object state)
    {
        currentTime = DateTime.Now.ToString("HH:mm:ss");
        InvokeAsync(StateHasChanged);

        // Trigger alarm if the current time matches the set alarm time
        // if (alarmTime.HasValue && DateTime.Now.TimeOfDay.Hours == alarmTime.Value.Hours &&
        //     DateTime.Now.TimeOfDay.Minutes == alarmTime.Value.Minutes)
        // {
        //     alarmMessage = "⏰ Alarm! Time reached!";
        // }


        if (alarm.alarmTime.Hour == DateTime.Now.TimeOfDay.Hours)
        {
            
        }
    }

    public void SetAlarm()
    {
        if(!string.IsNullOrWhiteSpace(alarmTimeString))
        {
            alarm.alarmTimeString = alarmTimeString;
            alarm.currrentTime = DateTime.Now;
            alarmTimeString = String.Empty;
        }


    }

    //------- EditForm code;


    // fuction buildSevenSegDisplayNum(int numToDisplay, svgHtmlObject?) {
    // toggle the classes of polygons a-h to display numToDisplay}

    

}



